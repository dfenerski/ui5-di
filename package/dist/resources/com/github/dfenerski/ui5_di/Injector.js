sap.ui.define(["reflect-metadata/lite","./di-container/DIContainer","./di-container/misc/constants","./injector-util/InjectorUtil","./injector-util/misc/constants","./misc","./reflect-util/ReflectUtil"],function(e,n,t,c,s,r,o){"use strict";const i=n["DIContainer"];const a=t["Precedence"];const d=c["InjectorUtil"];const l=s["DependencyResolutionStrategy"];const y=r["E_INJECTOR_NO_DEPENDENCY_FACTORY"];const p=o["ReflectUtil"];class I{static logger=console;static _container=new i;static dumpContainerInfo(){this.logger.error("Injector._container:\n",this._container)}static createDependencyProxy(e){return new Proxy(e,{get:(e,n,t)=>{if(!e.dependencyInstance){return undefined}return Reflect.get(e.dependencyInstance,n,t)}})}static register(e){const n=p.getIsFactoryOnly(e);const t=p.getParameterTypes(e);if(!n){t.forEach(e=>this.register(e))}const c=p.getInjectionToken(e);const s=p.getPrecedence(e);if(this._container.has(c)){const{dependencyClass:e,dependencyInstance:n,precedence:t}=this._container.get(c);const r=p.getIsFactoryOnly(e);if(t>s){return}else if(r&&n){return}}const r={dependencyInstance:null};const o={dependencyClass:e,dependencyInstance:null,dependencyProxy:this.createDependencyProxy(r),dependencyProxyContext:r,precedence:s};this._container.set(c,o)}static settle(e,n){const t=d.normalizeSettleToken(e);const{dependencyClass:c,dependencyInstance:s,dependencyProxy:r,dependencyProxyContext:o,precedence:i}=this._container.get(t);if(s){return s}const a=p.getIsFactoryOnly(c);if(a&&!n){throw new Error(y)}const l=p.getParameterTypes(c);const I=p.getParameterInjectionTokens(c);const u=a?[]:l.map((e,n)=>this.settle(I[n]||p.getInjectionToken(e)));const P=n?n():new c(...u);o.dependencyInstance=P;this._container.set(t,{dependencyClass:c,dependencyInstance:P,dependencyProxy:r,dependencyProxyContext:o,precedence:i});return P}static settleLazy(e,n){const t=d.normalizeSettleToken(e);const{dependencyClass:c,dependencyInstance:s,dependencyProxy:r}=this._container.get(t);if(s){return[s,()=>s]}const o=p.getIsFactoryOnly(c);if(o&&!n){throw new Error(y)}return[r,()=>this.settle(t,n)]}static Inject(e){return function(n,t,c){const s=p.getParameterInjectionTokens(n);s[c]=e;p.setParameterInjectionTokens(n,s)}}static Injectable(e=l.POLYMORPHIC){const{drs:n,primitiveToken:t}=d.parseInjectableArguments(e);return function(e){const c=d.resolveInjectionToken({dependencyClass:e,drs:n,primitiveToken:t});const s=p.getPrecedence(e)||a.DEFAULT;p.setInjectionToken(e,c);p.setPrecedence(e,s);I.register(e)}}static Precedence(e){return function(n){p.setPrecedence(n,e)}}static Final(){return function(e){p.setPrecedence(e,a.FINAL)}}static FactoryOnly(){return function(e){p.setIsFactoryOnly(e,true)}}}const u=I.dumpContainerInfo.bind(I);const P=I.settle.bind(I);const f=I.settleLazy.bind(I);const g=I.Inject.bind(I);const j=I.Injectable.bind(I);const m=I.Precedence.bind(I);const C=I.Final.bind(I);const h=I.FactoryOnly.bind(I);var T={__esModule:true};T.FactoryOnly=h;T.Final=C;T.Inject=g;T.Injectable=j;T.Precedence=m;T.dumpContainerInfo=u;T.settle=P;T.settleLazy=f;return T});
//# sourceMappingURL=Injector.js.map