sap.ui.define(["reflect-metadata/lite","./di-container/DIContainer","./di-container/misc/constants","./injector-util/InjectorUtil","./injector-util/misc/constants","./misc","./reflect-util/ReflectUtil"],function(e,n,t,c,r,s,o){"use strict";const i=n["DIContainer"];const a=t["Precedence"];const d=c["InjectorUtil"];const l=r["DependencyResolutionStrategy"];const y=s["E_INJECTOR_NO_DEPENDENCY_FACTORY"];const p=o["ReflectUtil"];class u{static logger=console;static _container=new i;static dumpContainerInfo(){this.logger.error("Injector._container:\n",this._container)}static createDependencyProxy(e){return new Proxy(e,{get:(e,n,t)=>{if(!e.dependencyInstance){return undefined}return Reflect.get(e.dependencyInstance,n,t)}})}static register(e){const n=p.getIsFactoryOnly(e);const t=p.getParameterTypes(e);if(!n){t.forEach(e=>this.register(e))}const c=p.getInjectionToken(e);const r=p.getPrecedence(e);if(this._container.has(c)){const{dependencyClass:n,precedence:t}=this._container.get(c);if(n===e){return}else if(t>r){return}}const s={dependencyInstance:null};const o={dependencyClass:e,dependencyInstance:null,dependencyProxy:this.createDependencyProxy(s),dependencyProxyContext:s,precedence:r};this._container.set(c,o)}static settle(e,n){const t=d.normalizeSettleToken(e);const{dependencyClass:c,dependencyInstance:r,dependencyProxy:s,dependencyProxyContext:o,precedence:i}=this._container.get(t);if(r){return r}const a=p.getIsFactoryOnly(c);if(a&&!n){throw new Error(y)}const l=p.getParameterTypes(c);const u=p.getParameterInjectionTokens(c);const I=a?[]:l.map((e,n)=>this.settle(u[n]||p.getInjectionToken(e)));const P=n?n():new c(...I);o.dependencyInstance=P;this._container.set(t,{dependencyClass:c,dependencyInstance:P,dependencyProxy:s,dependencyProxyContext:o,precedence:i});return P}static settleLazy(e,n){const t=d.normalizeSettleToken(e);const{dependencyClass:c,dependencyInstance:r,dependencyProxy:s}=this._container.get(t);if(r){return[r,()=>r]}const o=p.getIsFactoryOnly(c);if(o&&!n){throw new Error(y)}return[s,()=>this.settle(t,n)]}static Inject(e){return function(n,t,c){const r=p.getParameterInjectionTokens(n);r[c]=e;p.setParameterInjectionTokens(n,r)}}static Injectable(e=l.POLYMORPHIC){const{drs:n,primitiveToken:t}=d.parseInjectableArguments(e);return function(e){const c=d.resolveInjectionToken({dependencyClass:e,drs:n,primitiveToken:t});const r=p.getPrecedence(e)||a.DEFAULT;p.setInjectionToken(e,c);p.setPrecedence(e,r);u.register(e)}}static Precedence(e){return function(n){p.setPrecedence(n,e)}}static Final(){return function(e){p.setPrecedence(e,a.FINAL)}}static FactoryOnly(){return function(e){p.setIsFactoryOnly(e,true)}}}const I=u.dumpContainerInfo.bind(u);const P=u.settle.bind(u);const f=u.settleLazy.bind(u);const g=u.Inject.bind(u);const j=u.Injectable.bind(u);const m=u.Precedence.bind(u);const C=u.Final.bind(u);const h=u.FactoryOnly.bind(u);var T={__esModule:true};T.FactoryOnly=h;T.Final=C;T.Inject=g;T.Injectable=j;T.Precedence=m;T.dumpContainerInfo=I;T.settle=P;T.settleLazy=f;return T});
//# sourceMappingURL=Injector.js.map